<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.1">
  <compounddef id="interface_i_c_o_family" kind="class" prot="public">
    <compoundname>ICOFamily</compoundname>
    <includes refid="_i_c_o_family_8h" local="no">ICOFamily.h</includes>
      <sectiondef kind="property">
      <memberdef kind="property" id="interface_i_c_o_family_1acb548d4be904c0d8e8ba4f3214f1ab4d" prot="public" static="no" readable="yes" writable="yes" gettable="no" settable="no" accessor="retain">
        <type>NSMutableDictionary *</type>
        <definition>NSMutableDictionary * ICOFamily::elements</definition>
        <argsstring></argsstring>
        <name>elements</name>
        <read></read>
        <write></write>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.h" line="28" bodyfile="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interface_i_c_o_family_1a662d7a27462fc81ab7037c7972fee1f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>id</type>
        <definition>id ICOFamily::initWithImage:</definition>
        <argsstring>(NSImage *image)</argsstring>
        <name>initWithImage:</name>
        <param>
          <type>NSImage *</type>
          <declname>image</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines an <computeroutput><ref refid="interface_i_c_o_family" kindref="compound">ICOFamily</ref></computeroutput> and sets an image using the setImage: method <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>image</parametername>
</parameternamelist>
<parameterdescription>
<para>the image to set. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para>setImage: </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1a96b6cc7a27dbfc1e9230e0eaf7b226b3" kindref="member">+ familyWithImage:</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.h" line="37" bodyfile="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.m" bodystart="24" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="interface_i_c_o_family_1ac2a7cdb55b7d43f64a4fc4bc12309bbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>id</type>
        <definition>id ICOFamily::initWithBitmapImageRep:</definition>
        <argsstring>(NSBitmapImageRep *rep)</argsstring>
        <name>initWithBitmapImageRep:</name>
        <param>
          <type>NSBitmapImageRep *</type>
          <declname>rep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines an <computeroutput><ref refid="interface_i_c_o_family" kindref="compound">ICOFamily</ref></computeroutput> and sets an image using the setBitmapImageRep: method <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rep</parametername>
</parameternamelist>
<parameterdescription>
<para>the <computeroutput>NSBitmapImageRep</computeroutput> to set. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para>setBitmapImageRep: </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1a81641d63bfe60258d5616abe34a3158f" kindref="member">+ familyWithBitmapImageRep:</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.h" line="43" bodyfile="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.m" bodystart="30" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="interface_i_c_o_family_1a6fee439f6a8977f4e112e10d166f90ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>id</type>
        <definition>id ICOFamily::initWithData:</definition>
        <argsstring>(NSData *data)</argsstring>
        <name>initWithData:</name>
        <param>
          <type>NSData *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines an <computeroutput><ref refid="interface_i_c_o_family" kindref="compound">ICOFamily</ref></computeroutput> and sets an image using the setData: method <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the data to set. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para>setData: </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1a1a34873b0ed7bf5c4284ae0418f5845b" kindref="member">+ familyWithData:</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.h" line="49" bodyfile="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.m" bodystart="36" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="interface_i_c_o_family_1a035e531a4d130b7fa3e8615cffcc7d6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ICOFamily::setImage:forElement:</definition>
        <argsstring>(NSImage *image,[forElement] kICOFamilyElement element)</argsstring>
        <name>setImage:forElement:</name>
        <param>
          <type>NSImage *</type>
          <declname>image</declname>
        </param>
        <param>
          <attributes>[forElement]</attributes>
          <type>kICOFamilyElement</type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the image for the specified <computeroutput>kICOFamilyElement</computeroutput> </para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>image</parametername>
</parameternamelist>
<parameterdescription>
<para>The image to set for the specified element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>element</parametername>
</parameternamelist>
<parameterdescription>
<para>The element to set the image as.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="interface_i_c_o_family_1ab8a1b7fd195667444b246415ebf4038b" kindref="member">- setBitmapImageRep:forElement:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1ae6269e8333319361ae73bb76bb637f87" kindref="member">- setData:forElement:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1a0e0f7d3ce2308da2c5f17868f8008fde" kindref="member">- imageForElement:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1a3e005c57b719cb31f37c90815547d900" kindref="member">- dataForElement:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1a1d862aa3444245957d7548d84af67b03" kindref="member">- bitmapImageRepForElement:</ref> </para></simplesect>
<simplesect kind="return"><para>Returns an autoreleased <computeroutput><ref refid="interface_i_c_o_family" kindref="compound">ICOFamily</ref></computeroutput> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.h" line="98" bodyfile="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.m" bodystart="212" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="interface_i_c_o_family_1ab8a1b7fd195667444b246415ebf4038b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ICOFamily::setBitmapImageRep:forElement:</definition>
        <argsstring>(NSBitmapImageRep *rep,[forElement] kICOFamilyElement element)</argsstring>
        <name>setBitmapImageRep:forElement:</name>
        <param>
          <type>NSBitmapImageRep *</type>
          <declname>rep</declname>
        </param>
        <param>
          <attributes>[forElement]</attributes>
          <type>kICOFamilyElement</type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the @ NSBitmapImageRep for the specified <computeroutput>kICOFamilyElement</computeroutput> </para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rep</parametername>
</parameternamelist>
<parameterdescription>
<para>The rep to set for the specified element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>element</parametername>
</parameternamelist>
<parameterdescription>
<para>The element to set the image as.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="interface_i_c_o_family_1a035e531a4d130b7fa3e8615cffcc7d6f" kindref="member">- setImage:forElement:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1ae6269e8333319361ae73bb76bb637f87" kindref="member">- setData:forElement:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1a0e0f7d3ce2308da2c5f17868f8008fde" kindref="member">- imageForElement:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1a3e005c57b719cb31f37c90815547d900" kindref="member">- dataForElement:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1a1d862aa3444245957d7548d84af67b03" kindref="member">- bitmapImageRepForElement:</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.h" line="110" bodyfile="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.m" bodystart="221" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="interface_i_c_o_family_1ae6269e8333319361ae73bb76bb637f87" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ICOFamily::setData:forElement:</definition>
        <argsstring>(NSData *data,[forElement] kICOFamilyElement element)</argsstring>
        <name>setData:forElement:</name>
        <param>
          <type>NSData *</type>
          <declname>data</declname>
        </param>
        <param>
          <attributes>[forElement]</attributes>
          <type>kICOFamilyElement</type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the data for the specified <computeroutput>kICOFamilyElement</computeroutput> </para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data to set for the specified element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>element</parametername>
</parameternamelist>
<parameterdescription>
<para>The element to set the image as.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="interface_i_c_o_family_1ab8a1b7fd195667444b246415ebf4038b" kindref="member">- setBitmapImageRep:forElement:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1a035e531a4d130b7fa3e8615cffcc7d6f" kindref="member">- setImage:forElement:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1a0e0f7d3ce2308da2c5f17868f8008fde" kindref="member">- imageForElement:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1a3e005c57b719cb31f37c90815547d900" kindref="member">- dataForElement:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1a1d862aa3444245957d7548d84af67b03" kindref="member">- bitmapImageRepForElement:</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.h" line="122" bodyfile="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.m" bodystart="235" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="interface_i_c_o_family_1a07a24c6b9be55140d7554d55d98ba428" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ICOFamily::setImage:forCustomSize:</definition>
        <argsstring>(NSImage *image,[forCustomSize] NSSize size)</argsstring>
        <name>setImage:forCustomSize:</name>
        <param>
          <type>NSImage *</type>
          <declname>image</declname>
        </param>
        <param>
          <attributes>[forCustomSize]</attributes>
          <type>NSSize</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The size must not be NSZeroSize and the image&apos;s size and the specified size must match or this will do nothing. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>image</parametername>
</parameternamelist>
<parameterdescription>
<para>Image to set to the specified size </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size to set the image to</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="interface_i_c_o_family_1a2211781f0e33c59244138761f3a79a9a" kindref="member">- setBitmapImageRep:forCustomSize:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1a9f214507e9888bb583d6442593f2f95f" kindref="member">- setData:forCustomSize:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1aa71a4f4eddb10efe738b089b5fa262b1" kindref="member">- dataForCustomSize:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1ac030eb99213f78e0879ade150ffbe89e" kindref="member">- imageForCustomSize:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1a905a12fd63201d1dadd2b647b4843b6c" kindref="member">- bitmapImageRepForCustomSize:</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.h" line="134" bodyfile="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.m" bodystart="71" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="interface_i_c_o_family_1a2211781f0e33c59244138761f3a79a9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ICOFamily::setBitmapImageRep:forCustomSize:</definition>
        <argsstring>(NSBitmapImageRep *rep,[forCustomSize] NSSize size)</argsstring>
        <name>setBitmapImageRep:forCustomSize:</name>
        <param>
          <type>NSBitmapImageRep *</type>
          <declname>rep</declname>
        </param>
        <param>
          <attributes>[forCustomSize]</attributes>
          <type>NSSize</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The size must not be NSZeroSize and the image&apos;s pixel size and the specified size must match or this will do nothing. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rep</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>NSBitmapImageRep</computeroutput> to set to the specified size </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size to set the image repersentation to</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="interface_i_c_o_family_1a07a24c6b9be55140d7554d55d98ba428" kindref="member">- setImage:forCustomSize:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1a9f214507e9888bb583d6442593f2f95f" kindref="member">- setData:forCustomSize:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1aa71a4f4eddb10efe738b089b5fa262b1" kindref="member">- dataForCustomSize:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1ac030eb99213f78e0879ade150ffbe89e" kindref="member">- imageForCustomSize:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1a905a12fd63201d1dadd2b647b4843b6c" kindref="member">- bitmapImageRepForCustomSize:</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.h" line="145" bodyfile="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.m" bodystart="77" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="interface_i_c_o_family_1a9f214507e9888bb583d6442593f2f95f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ICOFamily::setData:forCustomSize:</definition>
        <argsstring>(NSData *data,[forCustomSize] NSSize size)</argsstring>
        <name>setData:forCustomSize:</name>
        <param>
          <type>NSData *</type>
          <declname>data</declname>
        </param>
        <param>
          <attributes>[forCustomSize]</attributes>
          <type>NSSize</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The size must not be NSZeroSize and the image&apos;s size and the specified size must match or this will do nothing. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to set to the specified size </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size to set the image to</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="interface_i_c_o_family_1a2211781f0e33c59244138761f3a79a9a" kindref="member">- setBitmapImageRep:forCustomSize:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1a07a24c6b9be55140d7554d55d98ba428" kindref="member">- setImage:forCustomSize:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1aa71a4f4eddb10efe738b089b5fa262b1" kindref="member">- dataForCustomSize:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1ac030eb99213f78e0879ade150ffbe89e" kindref="member">- imageForCustomSize:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1a905a12fd63201d1dadd2b647b4843b6c" kindref="member">- bitmapImageRepForCustomSize:</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.h" line="156" bodyfile="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.m" bodystart="89" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="interface_i_c_o_family_1a1cc28b100052d7ac4649d5fb3114634c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ICOFamily::setElements:fromImage:</definition>
        <argsstring>(kICOFamilyElement element,[fromImage] NSImage *image)</argsstring>
        <name>setElements:fromImage:</name>
        <param>
          <type>kICOFamilyElement</type>
          <declname>element</declname>
        </param>
        <param>
          <attributes>[fromImage]</attributes>
          <type>NSImage *</type>
          <declname>image</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>The size must not be NSZeroSize and the image&apos;s size and the specified size must match or this will do nothing.</para></listitem></itemizedlist>
</para><para><itemizedlist>
<listitem><para>The blitwise OR operator can be used to specify multiple sizes. Additionally you can use the <computeroutput>kICOFamilyAllElements</computeroutput> </para></listitem></itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>element</parametername>
</parameternamelist>
<parameterdescription>
<para>THe Element(s) to resize and set the image to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>image</parametername>
</parameternamelist>
<parameterdescription>
<para>The image to set to Element</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="interface_i_c_o_family_1a2211781f0e33c59244138761f3a79a9a" kindref="member">- setBitmapImageRep:forCustomSize:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1a9f214507e9888bb583d6442593f2f95f" kindref="member">- setData:forCustomSize:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1aa71a4f4eddb10efe738b089b5fa262b1" kindref="member">- dataForCustomSize:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1ac030eb99213f78e0879ade150ffbe89e" kindref="member">- imageForCustomSize:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1a905a12fd63201d1dadd2b647b4843b6c" kindref="member">- bitmapImageRepForCustomSize:</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.h" line="172" bodyfile="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.m" bodystart="106" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="interface_i_c_o_family_1a3e005c57b719cb31f37c90815547d900" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>NSData *</type>
        <definition>NSData * ICOFamily::dataForElement:</definition>
        <argsstring>(kICOFamilyElement element)</argsstring>
        <name>dataForElement:</name>
        <param>
          <type>kICOFamilyElement</type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the PNG representation of the specified @ kICOFamilyElement. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>element</parametername>
</parameternamelist>
<parameterdescription>
<para>The element of which the returned data is for </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the PNG data for the element </para></simplesect>
<simplesect kind="see"><para><ref refid="interface_i_c_o_family_1a0e0f7d3ce2308da2c5f17868f8008fde" kindref="member">- imageForElement:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1a1d862aa3444245957d7548d84af67b03" kindref="member">- bitmapImageRepForElement:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1ae6269e8333319361ae73bb76bb637f87" kindref="member">- setData:forElement:</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.h" line="182" bodyfile="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.m" bodystart="246" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="interface_i_c_o_family_1a0e0f7d3ce2308da2c5f17868f8008fde" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>NSImage *</type>
        <definition>NSImage * ICOFamily::imageForElement:</definition>
        <argsstring>(kICOFamilyElement element)</argsstring>
        <name>imageForElement:</name>
        <param>
          <type>kICOFamilyElement</type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the <computeroutput>NSImage</computeroutput> representation of the specified @ kICOFamilyElement. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>element</parametername>
</parameternamelist>
<parameterdescription>
<para>The element of which the returned image is for </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the <computeroutput>NSImage</computeroutput> value for the specified element. </para></simplesect>
<simplesect kind="see"><para><ref refid="interface_i_c_o_family_1a3e005c57b719cb31f37c90815547d900" kindref="member">- dataForElement:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1a1d862aa3444245957d7548d84af67b03" kindref="member">- bitmapImageRepForElement:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1a035e531a4d130b7fa3e8615cffcc7d6f" kindref="member">- setImage:forElement:</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.h" line="190" bodyfile="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.m" bodystart="250" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="interface_i_c_o_family_1a1d862aa3444245957d7548d84af67b03" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>NSBitmapImageRep *</type>
        <definition>NSBitmapImageRep * ICOFamily::bitmapImageRepForElement:</definition>
        <argsstring>(kICOFamilyElement element)</argsstring>
        <name>bitmapImageRepForElement:</name>
        <param>
          <type>kICOFamilyElement</type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the <computeroutput>NSBitmapImageRep</computeroutput> of the specified @ kICOFamilyElement. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>element</parametername>
</parameternamelist>
<parameterdescription>
<para>The element of which the returned <computeroutput>NSBitmapImageRep</computeroutput> is for </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the <computeroutput>NSBitmapImageRep</computeroutput> for the specified element </para></simplesect>
<simplesect kind="see"><para><ref refid="interface_i_c_o_family_1a0e0f7d3ce2308da2c5f17868f8008fde" kindref="member">- imageForElement:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1a3e005c57b719cb31f37c90815547d900" kindref="member">- dataForElement:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1ab8a1b7fd195667444b246415ebf4038b" kindref="member">- setBitmapImageRep:forElement:</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.h" line="198" bodyfile="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.m" bodystart="253" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="interface_i_c_o_family_1aa71a4f4eddb10efe738b089b5fa262b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>NSData *</type>
        <definition>NSData * ICOFamily::dataForCustomSize:</definition>
        <argsstring>(NSSize size)</argsstring>
        <name>dataForCustomSize:</name>
        <param>
          <type>NSSize</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets an <computeroutput>NSData</computeroutput> instance for the specified size. If the specified size doesn&apos;t exist, returns nil. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size the get the data for. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the data for the specified size.</para></simplesect>
<simplesect kind="see"><para><ref refid="interface_i_c_o_family_1ac030eb99213f78e0879ade150ffbe89e" kindref="member">- imageForCustomSize:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1a905a12fd63201d1dadd2b647b4843b6c" kindref="member">- bitmapImageRepForCustomSize:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1a9f214507e9888bb583d6442593f2f95f" kindref="member">- setData:forCustomSize:</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.h" line="209" bodyfile="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.m" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="interface_i_c_o_family_1ac030eb99213f78e0879ade150ffbe89e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>NSImage *</type>
        <definition>NSImage * ICOFamily::imageForCustomSize:</definition>
        <argsstring>(NSSize size)</argsstring>
        <name>imageForCustomSize:</name>
        <param>
          <type>NSSize</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If the specified size doesn&apos;t exist, returns nil. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size the get the image for. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the image for the specified size.</para></simplesect>
<simplesect kind="see"><para><ref refid="interface_i_c_o_family_1aa71a4f4eddb10efe738b089b5fa262b1" kindref="member">- dataForCustomSize:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1a905a12fd63201d1dadd2b647b4843b6c" kindref="member">- bitmapImageRepForCustomSize:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1a07a24c6b9be55140d7554d55d98ba428" kindref="member">- setImage:forCustomSize:</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.h" line="218" bodyfile="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.m" bodystart="100" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="interface_i_c_o_family_1a905a12fd63201d1dadd2b647b4843b6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>NSBitmapImageRep *</type>
        <definition>NSBitmapImageRep * ICOFamily::bitmapImageRepForCustomSize:</definition>
        <argsstring>(NSSize size)</argsstring>
        <name>bitmapImageRepForCustomSize:</name>
        <param>
          <type>NSSize</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If the specified size doesn&apos;t exist, returns nil. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size the get the <computeroutput>NSBitmapImageRep</computeroutput> for. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the <computeroutput>NSBitmapImageRep</computeroutput> for the specified size.</para></simplesect>
<simplesect kind="see"><para><ref refid="interface_i_c_o_family_1ac030eb99213f78e0879ade150ffbe89e" kindref="member">- imageForCustomSize:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1aa71a4f4eddb10efe738b089b5fa262b1" kindref="member">- dataForCustomSize:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1a2211781f0e33c59244138761f3a79a9a" kindref="member">- setBitmapImageRep:forCustomSize:</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.h" line="228" bodyfile="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.m" bodystart="103" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="interface_i_c_o_family_1a1c78620ef7a5a06eabb1ae2670a937fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>NSImage *</type>
        <definition>NSImage * ICOFamily::imageWithAllReps</definition>
        <argsstring>()</argsstring>
        <name>imageWithAllReps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets an image with all of the representations of the <computeroutput><ref refid="interface_i_c_o_family" kindref="compound">ICOFamily</ref></computeroutput> instance. If no elements have been set, returns a blank NSImage. <simplesect kind="return"><para>Returns an autoreleased <computeroutput>NSImage</computeroutput> instance with all of the representations retrieved from <computeroutput>elements</computeroutput> </para></simplesect>
<simplesect kind="see"><para>elements </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.h" line="234" bodyfile="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.m" bodystart="201" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="interface_i_c_o_family_1aa5ac9b74b0700e69c5dae54dd7e4cd4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>BOOL</type>
        <definition>BOOL ICOFamily::verifyImageOfSize:forElement:</definition>
        <argsstring>(NSSize size,[forElement] kICOFamilyElement element)</argsstring>
        <name>verifyImageOfSize:forElement:</name>
        <param>
          <type>NSSize</type>
          <declname>size</declname>
        </param>
        <param>
          <attributes>[forElement]</attributes>
          <type>kICOFamilyElement</type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.h" line="236" bodyfile="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.m" bodystart="256" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="interface_i_c_o_family_1aa6a569fce89d41adc4d72380c751d0ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>NSData *</type>
        <definition>NSData * ICOFamily::data</definition>
        <argsstring>()</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the raw <computeroutput>NSData</computeroutput> object for the ICO file If there are no representations set, this returns nil.</para><para><simplesect kind="return"><para>Returns the raw data for the ICO file for use when saving. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.h" line="242" bodyfile="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.m" bodystart="287" bodyend="349"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="interface_i_c_o_family_1ae4b4c6259b060b9d46e9e90f9106c224" prot="public" static="yes" const="no" explicit="no" inline="no" virt="virtual">
        <type>id</type>
        <definition>id ICOFamily::family</definition>
        <argsstring>()</argsstring>
        <name>family</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates an <computeroutput><ref refid="interface_i_c_o_family" kindref="compound">ICOFamily</ref></computeroutput> instance and returns it autoreleased. <simplesect kind="see"><para><ref refid="interface_i_c_o_family_1a96b6cc7a27dbfc1e9230e0eaf7b226b3" kindref="member">+ familyWithImage:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1a81641d63bfe60258d5616abe34a3158f" kindref="member">+ familyWithBitmapImageRep:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1a1a34873b0ed7bf5c4284ae0418f5845b" kindref="member">+ familyWithData:</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.h" line="56" bodyfile="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.m" bodystart="44" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="interface_i_c_o_family_1a96b6cc7a27dbfc1e9230e0eaf7b226b3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="virtual">
        <type>id</type>
        <definition>id ICOFamily::familyWithImage:</definition>
        <argsstring>(NSImage *image)</argsstring>
        <name>familyWithImage:</name>
        <param>
          <type>NSImage *</type>
          <declname>image</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates an <computeroutput><ref refid="interface_i_c_o_family" kindref="compound">ICOFamily</ref></computeroutput> instance and returns it autoreleased after setting the image.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>image</parametername>
</parameternamelist>
<parameterdescription>
<para>The image to initially set. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="interface_i_c_o_family_1ae4b4c6259b060b9d46e9e90f9106c224" kindref="member">+ family</ref>: </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1a81641d63bfe60258d5616abe34a3158f" kindref="member">+ familyWithBitmapImageRep:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1a1a34873b0ed7bf5c4284ae0418f5845b" kindref="member">+ familyWithData:</ref> </para></simplesect>
<simplesect kind="return"><para>Returns an autoreleased <computeroutput><ref refid="interface_i_c_o_family" kindref="compound">ICOFamily</ref></computeroutput> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.h" line="65" bodyfile="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.m" bodystart="48" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="interface_i_c_o_family_1a81641d63bfe60258d5616abe34a3158f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="virtual">
        <type>id</type>
        <definition>id ICOFamily::familyWithBitmapImageRep:</definition>
        <argsstring>(NSBitmapImageRep *rep)</argsstring>
        <name>familyWithBitmapImageRep:</name>
        <param>
          <type>NSBitmapImageRep *</type>
          <declname>rep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates an <computeroutput><ref refid="interface_i_c_o_family" kindref="compound">ICOFamily</ref></computeroutput> instance and returns it autoreleased after setting the <computeroutput>NSBitmapImageRep</computeroutput>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rep</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput>NSBitmapImageRep</computeroutput> to initially set. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="interface_i_c_o_family_1ae4b4c6259b060b9d46e9e90f9106c224" kindref="member">+ family</ref>: </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1a96b6cc7a27dbfc1e9230e0eaf7b226b3" kindref="member">+ familyWithImage:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1a1a34873b0ed7bf5c4284ae0418f5845b" kindref="member">+ familyWithData:</ref> </para></simplesect>
<simplesect kind="return"><para>Returns an autoreleased <computeroutput><ref refid="interface_i_c_o_family" kindref="compound">ICOFamily</ref></computeroutput> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.h" line="74" bodyfile="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.m" bodystart="53" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="interface_i_c_o_family_1a1a34873b0ed7bf5c4284ae0418f5845b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="virtual">
        <type>id</type>
        <definition>id ICOFamily::familyWithData:</definition>
        <argsstring>(NSData *data)</argsstring>
        <name>familyWithData:</name>
        <param>
          <type>NSData *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates an <computeroutput><ref refid="interface_i_c_o_family" kindref="compound">ICOFamily</ref></computeroutput> instance and returns it autoreleased after setting the data.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data to initially set. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="interface_i_c_o_family_1ae4b4c6259b060b9d46e9e90f9106c224" kindref="member">+ family</ref>: </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1a81641d63bfe60258d5616abe34a3158f" kindref="member">+ familyWithBitmapImageRep:</ref> </para><simplesectsep/><para><ref refid="interface_i_c_o_family_1a96b6cc7a27dbfc1e9230e0eaf7b226b3" kindref="member">+ familyWithImage:</ref> </para></simplesect>
<simplesect kind="return"><para>Returns an autoreleased <computeroutput><ref refid="interface_i_c_o_family" kindref="compound">ICOFamily</ref></computeroutput> instance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.h" line="83" bodyfile="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.m" bodystart="58" bodyend="62"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A class for saving an ICO file using any size under 256 pixels. </para>    </detaileddescription>
    <location file="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.h" line="27" bodyfile="/Users/Alex/Documents/Source Code/Git/ICOFamily/ICOFamily.h" bodystart="27" bodyend="-1"/>
    <listofallmembers>
      <member refid="interface_i_c_o_family_1a905a12fd63201d1dadd2b647b4843b6c" prot="public" virt="virtual"><scope>ICOFamily</scope><name>bitmapImageRepForCustomSize:</name></member>
      <member refid="interface_i_c_o_family_1a1d862aa3444245957d7548d84af67b03" prot="public" virt="virtual"><scope>ICOFamily</scope><name>bitmapImageRepForElement:</name></member>
      <member refid="interface_i_c_o_family_1aa6a569fce89d41adc4d72380c751d0ae" prot="public" virt="virtual"><scope>ICOFamily</scope><name>data</name></member>
      <member refid="interface_i_c_o_family_1aa71a4f4eddb10efe738b089b5fa262b1" prot="public" virt="virtual"><scope>ICOFamily</scope><name>dataForCustomSize:</name></member>
      <member refid="interface_i_c_o_family_1a3e005c57b719cb31f37c90815547d900" prot="public" virt="virtual"><scope>ICOFamily</scope><name>dataForElement:</name></member>
      <member refid="interface_i_c_o_family_1acb548d4be904c0d8e8ba4f3214f1ab4d" prot="protected" virt="non-virtual"><scope>ICOFamily</scope><name>elements</name></member>
      <member refid="interface_i_c_o_family_1acb548d4be904c0d8e8ba4f3214f1ab4d" prot="public" virt="non-virtual"><scope>ICOFamily</scope><name>elements</name></member>
      <member refid="interface_i_c_o_family_1ae4b4c6259b060b9d46e9e90f9106c224" prot="public" virt="virtual"><scope>ICOFamily</scope><name>family</name></member>
      <member refid="interface_i_c_o_family_1a81641d63bfe60258d5616abe34a3158f" prot="public" virt="virtual"><scope>ICOFamily</scope><name>familyWithBitmapImageRep:</name></member>
      <member refid="interface_i_c_o_family_1a1a34873b0ed7bf5c4284ae0418f5845b" prot="public" virt="virtual"><scope>ICOFamily</scope><name>familyWithData:</name></member>
      <member refid="interface_i_c_o_family_1a96b6cc7a27dbfc1e9230e0eaf7b226b3" prot="public" virt="virtual"><scope>ICOFamily</scope><name>familyWithImage:</name></member>
      <member refid="interface_i_c_o_family_1ac030eb99213f78e0879ade150ffbe89e" prot="public" virt="virtual"><scope>ICOFamily</scope><name>imageForCustomSize:</name></member>
      <member refid="interface_i_c_o_family_1a0e0f7d3ce2308da2c5f17868f8008fde" prot="public" virt="virtual"><scope>ICOFamily</scope><name>imageForElement:</name></member>
      <member refid="interface_i_c_o_family_1a1c78620ef7a5a06eabb1ae2670a937fb" prot="public" virt="virtual"><scope>ICOFamily</scope><name>imageWithAllReps</name></member>
      <member refid="interface_i_c_o_family_1ac2a7cdb55b7d43f64a4fc4bc12309bbb" prot="public" virt="virtual"><scope>ICOFamily</scope><name>initWithBitmapImageRep:</name></member>
      <member refid="interface_i_c_o_family_1a6fee439f6a8977f4e112e10d166f90ed" prot="public" virt="virtual"><scope>ICOFamily</scope><name>initWithData:</name></member>
      <member refid="interface_i_c_o_family_1a662d7a27462fc81ab7037c7972fee1f1" prot="public" virt="virtual"><scope>ICOFamily</scope><name>initWithImage:</name></member>
      <member refid="interface_i_c_o_family_1a2211781f0e33c59244138761f3a79a9a" prot="public" virt="virtual"><scope>ICOFamily</scope><name>setBitmapImageRep:forCustomSize:</name></member>
      <member refid="interface_i_c_o_family_1ab8a1b7fd195667444b246415ebf4038b" prot="public" virt="virtual"><scope>ICOFamily</scope><name>setBitmapImageRep:forElement:</name></member>
      <member refid="interface_i_c_o_family_1a9f214507e9888bb583d6442593f2f95f" prot="public" virt="virtual"><scope>ICOFamily</scope><name>setData:forCustomSize:</name></member>
      <member refid="interface_i_c_o_family_1ae6269e8333319361ae73bb76bb637f87" prot="public" virt="virtual"><scope>ICOFamily</scope><name>setData:forElement:</name></member>
      <member refid="interface_i_c_o_family_1a1cc28b100052d7ac4649d5fb3114634c" prot="public" virt="virtual"><scope>ICOFamily</scope><name>setElements:fromImage:</name></member>
      <member refid="interface_i_c_o_family_1a07a24c6b9be55140d7554d55d98ba428" prot="public" virt="virtual"><scope>ICOFamily</scope><name>setImage:forCustomSize:</name></member>
      <member refid="interface_i_c_o_family_1a035e531a4d130b7fa3e8615cffcc7d6f" prot="public" virt="virtual"><scope>ICOFamily</scope><name>setImage:forElement:</name></member>
      <member refid="interface_i_c_o_family_1aa5ac9b74b0700e69c5dae54dd7e4cd4c" prot="public" virt="virtual"><scope>ICOFamily</scope><name>verifyImageOfSize:forElement:</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
